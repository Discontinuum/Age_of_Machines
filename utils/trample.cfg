#define WEAPON_SPECIAL_AOM_AIR_STRIKE VALUE
    [dummy]
        id=aom_air_strike{VALUE}
        name=_"air strike"+" {VALUE}"
        description=_"After the attack this unit moves behind the enemy's back and receives"+" {VALUE} "+"moves." 
    [/dummy]
    [/specials]
[/attack]

     [event]
       name=attack end
       first_time_only=no
   
       [filter_attack]
           special_id=aom_air_strike{VALUE}
       [/filter_attack]
   
#       [filter_second]
#           [not]
#               [filter_location]
#                   terrain=*^V*
#               [/filter_location]
#           [/not]
#       [/filter_second]
   
               [store_locations]
                   [not]
                       [filter]
                       [/filter]
                       [or]
                           #TODO: ideally make this check whether the tile can actually be passed by the specific unit, but this is good enough for now
                           terrain=M*^*,Q*^*,X*^*,Wo*^*,*^Qov,*^Xo#mountains, unwalkable, impassable, and deep water
                       [/or]
                   [/not]
   
                   [filter_adjacent_location]
                       x,y=$x2,$y2
                       adjacent=-$unit.facing
                   [/filter_adjacent_location]
   
                   variable=knockback_target_hex
               [/store_locations]
   
               [if]
                   [variable]
                       name=knockback_target_hex.length
                       greater_than=0
                   [/variable]
   
                   [then]

                               {IF_VAR second_unit.hitpoints less_than_equal_to 0 (
                               [then]
#this code seems to be no longer necessary
##the events are fired manually, as trample kinda breaks them
##TODO: fix last breath events not working properly
#                               [fire_event]
#                                      name=last breath
#                                      [primary_unit]
#                                           x,y=$x2,$y2
#                                      [/primary_unit]
#                                      [secondary_unit]
#                                           x,y=$x1,$y1
#                                      [/secondary_unit]
#                                      [secondary_attack]
#                                           name=trample
#                                      [/secondary_attack]
#                               [/fire_event]
#                               {IF_VAR second_unit.hitpoints less_than_equal_to 0 (
#                               [then]
#second IF_VAR macro, in case the unit gets healed in the last breath event (such as with the disloyal ability)
#                               [fire_event]
#                                      name=die
#                                      [primary_unit]
#                                           x,y=$x2,$y2
#                                      [/primary_unit]
#                                      [secondary_unit]
#                                           x,y=$x1,$y1
#                                      [/secondary_unit]
#                               [/fire_event]
#                               [/then]
#                               )}


                               [modify_unit]
                                    [filter]
                                        id=$unit.id
                                    [/filter]
                                    experience="$($unit.experience + $tmp_trample_exp)"
                               [/modify_unit]

                               {CLEAR_VARIABLE tmp_trample_exp}

                               [/then]
                               #if enemy is still alive, give the trampler exp equal to enemy level (no need to give exp to target, as target doesn't move)
                               [else]
                               [modify_unit]
                                    [filter]
                                        id=$unit.id
                                    [/filter]
                                    experience="$($unit.experience + $second_unit.level)"
                               [/modify_unit]
                               [/else]
                               )}

                        [teleport]
                            [filter]
                                x,y=$x1,$y1
                            [/filter]
                            animate=no#yes
                            
                            x,y=$knockback_target_hex.x,$knockback_target_hex.y
                           check_passability=yes
                           clear_shroud=yes
                        [/teleport]
                        [redraw]
                        [/redraw]
                       [if]
                           [have_unit]
                               x,y=$knockback_target_hex.x,$knockback_target_hex.y
                               id=$unit.id
                           [/have_unit]
   
                           [then]
                               
#                               [store_unit]
#                                   [filter]
#                                       x,y=$knockback_target_hex.x,$knockback_target_hex.y
#                                   [/filter]   
#                                   kill=no
#                                   variable=knockbacked
#                               [/store_unit]
   
#                               [unstore_unit]
#                                   variable=knockbacked
#                                   text= _ "+{VALUE} moves!"
#                                   {COLOR_HARM}
#                               [/unstore_unit]
                                {MODIFY_UNIT id=$unit.id moves {VALUE}}


                               [fire_event]
                                      name=moveto
                                      [primary_unit]
                                           x,y=$knockback_target_hex.x,$knockback_target_hex.y
                                      [/primary_unit]
                               [/fire_event]


#                               {CLEAR_VARIABLE knockbacked}
                           [/then]
                       [/if]
                   [/then]
               [/if]
   
               {CLEAR_VARIABLE knockback_direction,knockback_target_hex}
   [/event]
    [+attack]
    [+specials]
#enddef
#define WEAPON_SPECIAL_OVERWHELM
    [disable]
        id=overwhelm
        name=_"overwhelm"
        description=_"When used offensively, this attack makes the opponent unable to retaliate."
        active_on=offense
        apply_to=opponent
    [/disable]
#enddef