#textdomain wesnoth

# Weapon specials

# Paralyze special macros #

#define WEAPON_SPECIAL_PARALYZE
    [dummy]
        id=paralyze
        name= _ "paralyze"
        description= _ "This attack paralyzes a unit for a turn. Paralyzed units"
    [/dummy]
[/specials]
[/attack]
[event]
        name=attacker_hits
        first_time_only=no
        [filter_attack]
            special=paralyze
        [/filter_attack]
        [filter_second]
          [not]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]
            [/not]
        [/filter_second]
		[if]
                  [variable]
                    name=second_unit.status.paralyzed
                    not_equals=yes
                  [/variable]
			[then]
        [unstore_unit]
            variable=second_unit
	    text="paralyzed"
            {COLOR_HARM}
            find_vacant=no
        [/unstore_unit]
#                       [/then]
#		[/if]
            [modify_unit]
              [filter]
                 id=$second_unit.id
              [/filter]
              [status]
                  paralyzed=yes
              [/status]
            [/modify_unit]
    [set_variables]
        name=paralyze_unit_information
        mode=append
        [value]
            id=$second_unit.id
            side=$second_unit.side
            turn_of_unparalyze=$"($turn_number| + 1)"
            movement=$second_unit.max_moves
        [/value]
    [/set_variables]
    [object]
            silent=yes
#            duration=turn
            sort=potion-like
            [filter]
                find_in=second_unit
            [/filter]
            [effect]
                apply_to=image_mod
                replace="CS(60,-30,-20)"
            [/effect]
        [/object]
        [object]
            silent=yes
#            duration=turn
            [filter]
                find_in=second_unit
            [/filter]
            [effect]
                apply_to=attack
                attack_weight=0
                defense_weight=0
            [/effect]
            [effect]
                apply_to=movement
                set=0
            [/effect]
        [/object]
                       [/then]
		[/if]
    [/event]
    [event]
        name=defender_hits
        first_time_only=no
        [filter_second_attack]
            special=paralyze
        [/filter_second_attack]
        [filter]
          [not]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]
            [/not]
        [/filter]
            [modify_unit]
              [filter]
                 id=$second_unit.id
              [/filter]
              [status]
                paralyzed=no
              [/status]
            [/modify_unit]
		[if]
                  [variable]
                    name=unit.status.paralyzed
                    not_equals=yes
                  [/variable]
			[then]
        [unstore_unit]
            variable=unit
	    text="paralyzed"
            {COLOR_HARM}
            find_vacant=no
        [/unstore_unit]
#                  [/then]
#		[/if]
    [set_variables]
        name=paralyze_unit_information
        mode=append
        [value]
            id=$unit.id
            side=$unit.side
            turn_of_unparalyze=$"($turn_number| + 1)"
            movement=$unit.max_moves
        [/value]
    [/set_variables]
            [modify_unit]
              [filter]
                 id=$paralyze_unit_information[$i].id
              [/filter]
              [status]
                paralyzed=yes
              [/status]
            [/modify_unit]
        [object]
            silent=yes
            sort=potion-like
#            duration=turn
            [filter]
                find_in=unit
            [/filter]
            [effect]
                apply_to=image_mod
                replace="CS(60,-30,-20)"
            [/effect]
        [/object]
        [object]
            silent=yes
#            duration=turn
            [filter]
                find_in=unit
            [/filter]
            [effect]
                apply_to=attack
                attack_weight=0.0
                defense_weight=0.0
            [/effect]
            [effect]
                apply_to=movement
                set=0
            [/effect]
        [/object]
                  [/then]
		[/if]
[/event]
[event]
    name=side turn
    first_time_only=no

    {FOREACH paralyze_unit_information i}
        [if]
            [variable]
                name=paralyze_unit_information[$i].turn_of_unparalyze
                less_than_equal_to=$turn_number
            [/variable]
            [and]
                [variable]
                    name=paralyze_unit_information[$i].side
                    equals=$side_number
                [/variable]
            [/and]

            [then]
#                [unpetrify]
#                    id=$paralyze_unit_information[$i].id
#                [/unpetrify]

#            {CLEAR_VARIABLE $paralyze_unit_information[$i].status.paralyzed}
            [modify_unit]
              [filter]
                 id=$paralyze_unit_information[$i].id
              [/filter]
              [status]
                paralyzed=no
              [/status]
            [/modify_unit]
            [object]
                silent=yes
                sort=potion-like
                [filter]
                    id=$paralyze_unit_information[$i].id
                [/filter]
                [effect]
                    apply_to=image_mod
                    replace="CS(0,0,0)"
                [/effect]
            [effect]
                apply_to=attack
                attack_weight=1
                defense_weight=1
            [/effect]
            [effect]
                apply_to=movement
                set=$paralyze_unit_information[$i].movement
            [/effect]
            [/object]
                [clear_variable]
                    name=paralyze_unit_information[$i]
                [/clear_variable]
            [/then]
        [/if]
    {NEXT i}
[/event]
[+attack]
[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
#enddef
