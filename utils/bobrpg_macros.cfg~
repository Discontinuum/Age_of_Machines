####################################################################################
# Shortcut Macros
####################################################################################

# Same as VARIABLE_CONDITIONAL.
#define BOB_CONDITION VAR OP VALUE
[variable]
	name={VAR}
	{OP}={VALUE}
[/variable]
#enddef

#define BOB_SOUND FILE
[sound]
	name={FILE}
[/sound]
#enddef

#define BOB_DELAY TIME
[delay]
	time={TIME}
[/delay]
#enddef

#define BOB_GOLD SIDE SUM
[gold]
	side={SIDE} 
	amount={SUM}
[/gold]
#enddef

#define BOB_REDRAW
[redraw]
[/redraw]
#enddef

#define BOB_COLOR_GOLD
red=204
green=204
blue=51
#enddef

#define BOB_COLOR_GREY
red=153
green=153
blue=153
#enddef

#define BOB_COLOR_WHITE
red=255
green=255
blue=255
#enddef

# wmlindent: start ignoring

#define BOB_BLUE
#1F8FFF#enddef

#define BOB_GREY
#808080#enddef

#define BOB_GREEN
#33ff00#enddef

#define BOB_DARK_GREEN
#339900#enddef

#define BOB_GOLDEN
#cccc33#enddef

#define BOB_WHITE
#ffffff#enddef

# wmlindent: stop ignoring

# Blue #1F8FFF (31,143,255)
# Grey #808080 (128,128,128)
# Green #33ff00 (51,255,0)

#define BOB_ADD_OVERLAY X Y IMAGE
[unit_overlay]
	x={X}
	y={Y}
	image={IMAGE}
[/unit_overlay]
#enddef

#define BOB_REMOVE_OVERLAY X Y IMAGE
[remove_unit_overlay]
	x={X}
	y={Y}
	image={IMAGE}
[/remove_unit_overlay]
#enddef

#define BOB_PRINT MESSAGE
[print]
	text={MESSAGE}
	size=16
	duration=80
	{BOB_COLOR_WHITE}
[/print]
#enddef

#define BOB_PRINT_G MALE_MESSAGE FEMALE_MESSAGE
{IF_VAR character[$side_number].gender equals female (
	[then]
		{BOB_PRINT {FEMALE_MESSAGE}}
	[/then]
	[else]
		{BOB_PRINT {MALE_MESSAGE}}
	[/else]
)}
#enddef

#define BOB_DICTIONARY CASE VALUE VAR
[case]
	value={CASE}
	{VARIABLE {VAR} {VALUE}}
[/case]
#enddef

#define SCROLL_TO X Y
# disabled because it's already defined in interface-utils.cfg
#[scroll_to]
#	x={X}
#	y={Y}
#[/scroll_to]
#enddef

#define BOB_TELEPORT FILTER_1 FILTER_2 NEW_X NEW_Y
[teleport]
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	x={NEW_X}
	y={NEW_Y}
[/teleport]
#enddef

#define BOB_HEAL_UNIT FILTER AMOUNT
[heal_unit]
	[filter]
		{FILTER}
	[/filter]
	amount={AMOUNT}
[/heal_unit]
#enddef
		
#define BOB_CREATE_UNIT SIDE TYPE X Y
[unit]
	side={SIDE}
	type={TYPE}
	random_traits=no
	x={X}
	y={Y}
[/unit]
#enddef

#define BOB_PLACE_IMAGE_TC X Y IMAGE SIDE
[item]
	x={X}
	y={Y}
	image={IMAGE}.png~TC({SIDE},magenta)
[/item]
#enddef

####################################################################################
# Object Macros
####################################################################################

#####################
# Weapons
#####################

#define BOB_MODIFY_WEAPON RANGE ATTRIBUTE VALUE NAME
[object]
	silent=yes
	duration=forever
	[filter]
		canrecruit=yes
		side=$side_number
	[/filter]
	[effect]
		apply_to=attack
		name={NAME}
		range={RANGE}
		increase_{ATTRIBUTE}={VALUE}
	[/effect]
[/object]
#enddef

#define BOB_MODIFY_ATTACK FILTER_1 FILTER_2 RANGE ATTRIBUTE VALUE NAME
[object]
	silent=yes
	duration=forever
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	[effect]
		apply_to=attack
		name={NAME}
		range={RANGE}
		increase_{ATTRIBUTE}={VALUE}
	[/effect]
[/object]
#enddef
		
#define BOB_ADD_WEAPON_SPECIAL RANGE NAME SPECIAL
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=attack
		range={RANGE}
		name={NAME}
		[set_specials]
			mode=append
			{WEAPON_SPECIAL_{SPECIAL}}
		[/set_specials]
	[/effect]
[/object]
#enddef

#define BOB_REMOVE_WEAPON_SPECIAL RANGE NAME SPECIAL
[object]
	silent=yes
	duration=forever
	[filter]
		canrecruit=yes
		side=$side_number
	[/filter]
	[effect]
		apply_to=attack
		range={RANGE}
		name={NAME}
		remove_specials={SPECIAL}
	[/effect]
	[/object]
#enddef

#define BOB_REMOVE_SPECIALS FILTER_1 FILTER_2 RANGE SPECIAL
[object]
	silent=yes
	duration=forever
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	[effect]
		apply_to=attack
		range={RANGE}
		remove_specials={SPECIAL}
	[/effect]
[/object]
#enddef

#####################
# Abilities
#####################

#define BOB_ADD_ABILITY NAME
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=new_ability
		[abilities]
			{ABILITY_{NAME}}
		[/abilities]
	[/effect]
[/object]
#enddef

#define BOB_REMOVE_ABILITY NAME
[object]
	silent=yes
	duration=forever
	[filter]
		canrecruit=yes
		side=$side_number
	[/filter]
	[effect]
		apply_to=remove_ability
		[abilities]
			{ABILITY_{NAME}}
		[/abilities]
	[/effect]
[/object]
#enddef

#####################
# Movement
#####################

#define BOB_MODIFY_MOVE_COSTS TERRAIN VALUE
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=movement_costs
		replace=true
		[movement_costs]
			{TERRAIN}={VALUE}
		[/movement_costs]
	[/effect]
[/object]
#enddef

#define BOB_ALTER_MOVE_COSTS TERRAIN VALUE
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=movement_costs
		[movement_costs]
			{TERRAIN}={VALUE}
		[/movement_costs]
	[/effect]
[/object]
#enddef

#define BOB_MODIFY_MOVEMENT FILTER_1 FILTER_2 VALUE
[object]
	silent=yes
	duration=forever
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	[effect]
		apply_to=movement
		increase={VALUE}
	[/effect]
[/object]
#enddef

#####################
# Resistances & Defence
#####################

#define BOB_MODIFY_RESISTANCE FILTER_1 FILTER_2 DAMAGE_TYPE VALUE
[object]
	silent=yes
	duration=forever
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	[effect]
		apply_to=resistance
		[resistance]
			{DAMAGE_TYPE}={VALUE}
		[/resistance]
	[/effect]
[/object]
#enddef

#define BOB_MODIFY_RESISTANCES FILTER_1 FILTER_2 BLADE PIERCE IMPACT FIRE COLD ARCANE
[object]
	silent=yes
	duration=forever
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	[effect]
		apply_to=resistance
		[resistance]
			blade={BLADE}
			pierce={PIERCE}
			impact={IMPACT}
			fire={FIRE}
			cold={COLD}
			arcane={ARCANE}
		[/resistance]
	[/effect]
[/object]
#enddef

#define BOB_MODIFY_DEFENCE VALUE
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=defense
		[defense]
			shallow_water={VALUE}
			deep_water={VALUE}
			reef={VALUE}
			swamp_water={VALUE}
			flat={VALUE}
			sand={VALUE}
			forest={VALUE}
			hills={VALUE}
			mountains={VALUE}
			village={VALUE}
			castle={VALUE}
			cave={VALUE}
			frozen={VALUE}
			fungus={VALUE}
		[/defense]
	[/effect]
[/object]
#enddef

#define BOB_MODIFY_SINGLE_DEFENCE FILTER TERRAIN VALUE
[object]
	silent=yes
	duration=forever
	[filter]
		{FILTER}
	[/filter]
	[effect]
		apply_to=defense
		[defense]
			{TERRAIN}={VALUE}
		[/defense]
	[/effect]
[/object]
#enddef

#####################
# Status, Hitpoints & Experience
#####################

#define BOB_MODIFY_HITPOINTS CURRENT HEAL MAX
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=hitpoints
		increase={CURRENT}
		increase_total={MAX}
		heal_full={HEAL}
	[/effect]
[/object]
#enddef

#define BOB_MODIFY_EXPERIENCE MAX_XP
[object]
	silent=yes
	duration=forever
	[filter]
		x=$x1
		y=$y1
	[/filter]
	[effect]
		apply_to=max_experience
		increase={MAX_XP}
	[/effect]
[/object]
#enddef

####################################################################################
# Storing Macros
####################################################################################

#define BOB_STORE ACTION
[store_unit]
	[filter]
		x=$x1
		y=$y1
	[/filter]
	variable=stored
[/store_unit]
{ACTION}
[unstore_unit]
	variable=stored
[/unstore_unit]
{CLEAR_VARIABLE stored}
#enddef

#define BOB_STORE_ALL FILTER_1 FILTER_2 ACTION
[store_unit]
	[filter]
		{FILTER_1}
		{FILTER_1}
	[/filter]
	variable=units
[/store_unit]

{FOREACH units i}
	{ACTION}
	[unstore_unit]
		variable=units[$i]
	[/unstore_unit]
{NEXT i}

{CLEAR_VARIABLE units}
#enddef

#define BOB_STORE_UNIT FILTER_1 FILTER_2 ACTION
[store_unit]
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	variable=stored_unit
[/store_unit]
{ACTION}
[unstore_unit]
	variable=stored_unit
[/unstore_unit]
{CLEAR_VARIABLE stored_unit}
#enddef

#define BOB_ALTER_STATUS FILTER_1 FILTER_2 EFFECT SET
[store_unit]
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	variable=altered
[/store_unit]
{VARIABLE altered.status.{EFFECT} {SET}}
[unstore_unit]
	variable=altered
[/unstore_unit]
{CLEAR_VARIABLE altered}
#enddef

#define BOB_FLOATING_LABEL FILTER_1 FILTER_2 TEXT COLOUR
[store_unit]
	[filter]
		{FILTER_1}
		{FILTER_2}
	[/filter]
	variable=floater
[/store_unit]
[unstore_unit]
	variable=floater
	text={TEXT}
	{COLOUR}
[/unstore_unit]
{CLEAR_VARIABLE floater}
#enddef
