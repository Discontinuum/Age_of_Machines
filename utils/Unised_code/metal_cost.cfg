#textdomain wesnoth-AoM

#Metal

#Step 1: place the start metal (i'll put this into start event in scenario):

#define START_RESOURCES_METAL SIDE METAL
[modify_side]
    side={SIDE}
    [set_variable]
        name=metal_reserve
        value={METAL}
    [/set_variable]
[/modify_side]
#enddef

#Step 2: write attack specials:

#define WEAPON_SPECIAL_METAL_COST NUMBER
    [dummy]
        id=metal_cost{NUMBER}
        name= _ "metal cost {NUMBER}"
        description= _ "This attacks needs"+" {NUMBER} "+_"metal for 1 attack round. If there is not enough metal, attack will be disabled."
    [/dummy]
    [disable]
    id=metal_cost{NUMBER}
    [filter_self]
        [filter_side]
            [not]
                formula="wml_vars.metal_reserve >= {NUMBER}"
            [/not]
        [/filter_side]
    [/filter_self]
    [/disable]
    [/specials]
    [/attack]

    #Step 3: attack events:

    [event]
    name=attack end
    id=aom_metal_attack_event{NUMBER}
    first_time_only=no

    [filter_attack]
    special_id=metal_cost{NUMBER}
    [/filter_attack]

    [modify_side]
    side=$unit.side
    {VARIABLE_OP metal_reserve sub {NUMBER}}
    [/modify_side]
    [store_side]
    side=$unit.side
    variable=my_side
    [/store_side]
    [floating_text]
    x,y=$unit.x,$unit.y
    text=_ "$my_side.variables.metal_reserve metal left!"
    [/floating_text]
    {CLEAR_VARIABLE my_side}
    [/event]
    [event]
    name=attack end
    id=aom_metal_defense_event{NUMBER}
    first_time_only=no

    [filter_second_attack]
    special_id=metal_cost{NUMBER}
    [/filter_second_attack]

    [modify_side]
    side=$second_unit.side
    {VARIABLE_OP metal_reserve sub {NUMBER}}
    [/modify_side]

    [store_side]
    side=$second_unit.side
    variable=his_side
    [/store_side]
    [floating_text]
    x,y=$second_unit.x,$second_unit.y
    text=_ "$his_side.variables.metal_reserve metal left!"
    [/floating_text]
    {CLEAR_VARIABLE his_side}
    [/event]
    [+attack]
    [+specials]
#enddef