#define ABILITY_AOM_CAVALRY
    [dummy]
        id=aom_cavalry
        name= _ "cavalry"
        female_name= _ "female^cavalry"
        description= _ "Cavalry cannot be loaded into land and air transports."
    [/dummy]
#enddef
#define ABILITY_AOM_ARTILLERY
    [dummy]
        id=aom_artillery
        name= _ "artillery"
        female_name= _ "female^artillery"
        description= _ "Artillery can be attached to some vehicles. (Works like transporting infantry)."
    [/dummy]
#enddef
#define ABILITY_AOM_ONBOARD_INFANTRY NUMBER
    [dummy]
        id=aom_onboard_infantry{NUMBER}
        name=_"onboard infantry "+" {NUMBER}"
        description= _"After the death of this machine,"+" {NUMBER} "+_"wounded mechanics will appear on adjacent hexes."
    [/dummy]
[/abilities]
[event]
    name=last_breath
    id=aom_onboard_infantry{NUMBER}
    first_time_only=no

    [filter]
       ability=aom_onboard_infantry{NUMBER}
    [/filter]

    {REPEAT {NUMBER} (
    [unit]
        type=Imperial_Mechanic
        side=$unit.side
        x,y=$x1,$y1
        experience=4
        random_traits=yes
        placement=map
        passable=yes
    [/unit]
    )}
[/event]
[+abilities]
#enddef
#define AOM_ATTACKLIMIT NUMBER
    [disable]
        id=aom_attacklimit{NUMBER}
        name=_"скорострельность"+" {NUMBER}"
        description=_"Unit can use this attack up to"+" {NUMBER} "+_"times per turn."
        [filter_self]
            [not]
                formula="wml_vars.attack_limit >= {NUMBER}"
            [/not]
        [/filter_self]
    [/disable]
#enddef
#define WEAPON_SPECIAL_AOM_HIT_AND_RUN VALUE
    [dummy]
        id=aom_hit_and_run{VALUE}
        name= _ "hit and run"+" "+"+"+{VALUE}
        description=_"The accuracy of the attack is reduced by 10% on offense. After using this attack, the unit receives"+" {VALUE} "+_"mp."
    [/dummy] # wmlxgettext: [abilities]
[/specials]
[/attack]
[event]
    name=attack_end
    first_time_only=no
    [filter_attack]
    special_id=aom_hit_and_run{VALUE}
    [/filter_attack]
    {VARIABLE_OP unit.moves add {VALUE}}
    [unstore_unit]
        variable=unit
        {COLOR_HEAL}
        text="+"+{VALUE}+" "+_"movepoints"
        find_vacant=no
    [/unstore_unit]
[/event]
[+attack]
[+specials]
#enddef
#define WEAPON_SPECIAL_ATTACK_ONLY
    [disable]
        id=steppe_attack_only
        name=_"attack-only"
        description=_"This attack can only be used offensively."
        active_on=defense
    [/disable]
#enddef
#define WEAPON_SPECIAL_AOM_MP_USED VALUE
    [dummy]
        id=aom_mp_used{VALUE}
        name= _ "moves used"+" {VALUE}"
        description=_"This attack uses"+" {VALUE} "+"movement points. If the unit has movement points left after the attack, it may continue to move."
    [/dummy] 
[/specials]
[+specials]
#enddef
#define WEAPON_SPECIAL_AOM_ATTACKS_USED VALUE
    [dummy]
        id=aom_attacks_used{VALUE}
        name= _ "attacks used"+" {VALUE}"
        description=_"This attack uses"+" {VALUE} "+"attack points."
    [/dummy] 
[/specials]
[+specials]
#enddef
#define ABILITY_AOM_ENTRENCH
  [chance_to_hit]
        id=entrench
        name=_"entrench"
        description=_"In defense, this fighter is entrenched, reducing the enemy hit chance by 10%."
        add=-10
        cumulative=no
        active_on=defense
        apply_to=opponent
  [/chance_to_hit]
#enddef
#define WEAPON_SPECIAL_ONLY_ONE
    [dummy]
        id=aom_one_attack
        name= _ "only one"
        female_name= _ "only one"
        description= _ "This attack costs all attack points."
    [/dummy]
[/specials]
[/attack]
    [event]
        name=attack end
        id=aom_one_attack1
        first_time_only=no


        [filter_attack]
        special_id=aom_one_attack
        [/filter_attack]



        {VARIABLE unit.attacks_left 0}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
    [+attack]
    [+specials]
    #enddef
    #define ABILITY_AOM_REPAIR VALUE
    [heals]
        value={VALUE}
        id=eoma_repair{VALUE}
        affect_allies=yes
        name= _ "repairs"+" +{VALUE}"
        description=_"Allows the unit to repair adjacent friendly mechanical units at the beginning of each turn."
        affect_self=no
        poison=cured
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                race=mechanical
            [/filter]
        [/affect_adjacent]
    [/heals]
#enddef





