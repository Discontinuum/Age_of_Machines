#define AOM_UI
[event]
    name=preload
    id=aom_lua_ui
    first_time_only=no
    [lua]
       code = <<

_ = wesnoth.textdomain "wesnoth-AoM"

function aom_attach_unit_status_renderer()
  local old_unit_weapons = wesnoth.interface.game_display.unit_weapons
  function wesnoth.interface.game_display.unit_weapons()
    local s = old_unit_weapons()
    local u = wesnoth.interface.get_displayed_unit()
    if u then
--        wesnoth.interface.add_chat_message("unit exists check passed")
      if u.variables.fuel ~= nil then
  
        table.insert(s, { "element", {
          text = _"Fuel: ".. (u.variables.fuel or (tostring(u.variables.fuel)) or "0").."\n",
          tooltip = _"Топливо епта"
        } })
      end

      if u.variables.ammo ~= nil then
  
        table.insert(s, { "element", {
          text = _"Ammo: ".. (u.variables.ammo or (tostring(u.variables.ammo)) or "0").."\n",
          tooltip = _"Патроны епта"
        } })
      end

      if u.variables.stock_fuel ~= nil then
  
        table.insert(s, { "element", {
          text = _"Stock Fuel: ".. (u.variables.stock_fuel or (tostring(u.variables.stock_fuel)) or "0").."\n",
          tooltip = _"Топливо епта"
        } })
      end

      if u.variables.stock_ammo ~= nil then
  
        table.insert(s, { "element", {
          text = _"Stock Ammo: ".. (u.variables.stock_ammo or (tostring(u.variables.stock_ammo)) or "0").."\n",
          tooltip = _"Патроны епта"
        } })
      end

    end
    return s
   end
end

       aom_attach_unit_status_renderer()

        >>
    [/lua]
[/event]
#enddef



